Unite 4


Application Systems and Design Issues


Q.1	Explain various application systems.

Ans:	a) Data processing systems- Computerized system that performs mathematical operations or manipulations on input-data to transform it into the output form like audio/video, graphic, numeric, or text as per the system user‟s information requirements.

b)	Transaction processing systems- A transaction process system (TPS) is an information processing system for business transactions involving the collection, modification and retrieval of all transaction data. Characteristics of a TPS include performance, reliability and consistency.

c)	Event processing systems- Event Processing systems deal with the task of processing one or many events with the goal of identifying the meaningful events within the event cloud.

d)	Language processing systems-Such systems are concerned with the interactions between computers and human (natural) languages

Q.2	Explain User Interface Design.

Ans:	User interfaces should be designed to match the skills, experience and expectations of its anticipated users. System users often judge a system by its interface rather than its functionality. A poorly designed interface can cause a user to make catastrophic errors. Poor user interface design is the reason why so many software systems are never used.

Q.3	What do you mean by user interface design process.

Ans:	User Interface design is an iterative process involving close liaisons between users and designers. The process is explained in fig 8.1. The three core activities in this process are:

-	User analysis. Understand what the users will do with the system;
-	System prototyping. Develop a series of prototypes for experiment;

-	Interface evaluation. Experiment with these prototypes with users.


Software Development Methods and Reuse


Q.1:	Explain Rapid Software Development.

Ans:	Due to rapid changes in requirements and business environments, the software requires rapid development and delivery. But is not often the most critical requirement for software systems. Businesses may be willing to accept lower quality software if rapid delivery of essential functionality is possible.

Characteristics of RAD processes

-	The processes of specification, design and implementation are concurrent. There is no detailed specification and design documentation is minimised.

-	The system is developed in a series of increments. End users evaluate each increment and make proposals for later increments.

-	System user interfaces are usually developed using an interactive development system.

RAD environment tools
-	Database programming language
-	Interface generator
-	Links to office applications

-	Report generators

Q.2:	What do you mean by Agile methods?

Ans:	Agile methods are the methods which focus on the code rather than the design, based on an iterative approach to software development process and are intended to deliver working software rapidly to meet the rapid changing requirements. Agile methods are best suited to small and medium-sized systems or personal computer products.

Problems with agile methods

-	It can be difficult to keep the interest of customers who are involved in the process.

-	Team members may be unsuited to the intense involvement that characterizes agile methods.

-	Prioritizing changes can be difficult where there are multiple stakeholders.

-	Maintaining simplicity requires extra work.

-	Contracts may be a problem as with other approaches to iterative development.


Q.3:	What do you mean by Extreme programming?

Ans:	Extreme Programming or XP takes an „extreme‟ approach to iterative development. Here:
-	New versions may be built several times per day;
-	Increments are delivered to customers every 2 weeks;

-	All tests must be run for every build and the build is only accepted if tests run successfully.

Q.4	What do you mean by Software prototyping?

Ans:	A prototype is an initial version of a system used to demonstrate
concepts and try out design options. A prototype can be used in:

•	The requirements engineering process to help with requirements elicitation and validation;

•	In design processes to explore options and develop a User Interface design;

•	In the testing process to run back-to-back tests.

Benefits of prototyping
-	Improved system usability.
-	A closer match to users‟ real needs.
-	Improved design quality.
-	Improved maintainability.
-	Reduced development effort.

Q.5	What do you mean by Software Reuse?

Ans:	Software reuse is an act of developing new system through the usage of previously available components or other systems.

Q.6	What do you mean by Design Pattens?

Ans:	A design pattern is a way of reusing abstract knowledge about a problem and its solution. A pattern is a description of the problem and the essence of its solution. It should be sufficiently abstract to be reused

Q.7	What do you mean by Generator-based reuse?

Ans:	Program generators involve the reuse of standard patterns, algorithms and procedures. These are embedded in the generator and parameterized by user commands. A program is then automatically generated. Generator-based reuse is possible when domain abstractions and their mapping to executable code can be identified. A domain specific language is used to compose and control these abstractions.


Q.8	What do you mean by Application frameworks?

Ans:	Application frameworks are collections of abstract and concrete classes that can be adapted and extended to create application systems.

Q.9	What do you mean by Application frameworks?

Ans:	In Application framework, the whole of an application system may be reused either by incorporating it without change into other systems or by developing application families.